{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\johan\\\\OneDrive\\\\Documents\\\\GitHub\\\\Markvanding\\\\src\\\\components\\\\StartMachine.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\n\nfunction Startmachine({\n  setSubmitted,\n  inactivePumps,\n  inactiveMachines\n}) {\n  _s();\n\n  const [checked, setChecked] = useState(false);\n  const [machine, setMachine] = useState(\"\");\n  const [pump, setPump] = useState(\"\"); // function sendStartSMS(pumpnumber, pumpstartcode){\n  //   fetch(\"http://localhost:3001/sendsms\", {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\"\n  //     },\n  //     body: JSON.stringify({ \n  //       number: pumpnumber,\n  //       message: pumpstartcode\n  //     })\n  //   })\n  // }  \n\n  function UpdatePump(pump) {\n    // Set date of machine to selected date\n    var tempPump = { ...pump\n    };\n    tempPump.active = 1;\n    fetch(\"http://localhost:3001/updatepump\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(tempPump)\n    });\n  }\n\n  function UpdatePump(pump) {\n    // Set date of machine to selected date\n    var tempPump = { ...pump\n    };\n    tempPump.active = 1;\n    fetch(\"http://localhost:3001/updatepump\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(tempPump)\n    });\n  }\n\n  useEffect(function () {}, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"select\",\n    id: \"formstartmachine\",\n    onSubmit: function (event) {\n      // Prevents default behavior (Getting put at another site)\n      event.preventDefault(); // Check if Checkbox is true or false\n\n      if (!checked) return; // Checks if a machine and pump is selected\n\n      if (machine && pump) {\n        // MAKE MACHINE OBJECT\n        UpdatePump(pump); // UDFYLD RIGTIG DATA TIL SMS\n        // var pumpnumber = \"45\" + pump.number\n        // var pumpstartcode = pump.startcode\n        // sendStartSMS(pumpnumber, pumpstartcode)\n        // Sets \"Submitted\" hook to true\n\n        localStorage.setItem(\"machine\", machine);\n        localStorage.setItem(\"pump\", pump.name);\n        localStorage.setItem(\"hasstarted\", \"true\");\n        setSubmitted(true);\n      }\n\n      ;\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"choosemachine\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"chosenmachine\",\n        children: \"V\\xE6lg en maskine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"chosenmachine\",\n        id: \"chosenmachine\",\n        defaultValue: \"blank\",\n        onChange: function (event) {\n          setMachine(event.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"blank\",\n          disabled: true,\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), inactiveMachines.map(element => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: element.id\n        }, element.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 48\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"choosepump\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: \"V\\xE6lg en pumpe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"chosenpump\",\n        id: \"chosenpump\",\n        defaultValue: \"blank\",\n        onChange: function (event) {\n          var options = event.target.children;\n          var option = options[event.target.selectedIndex];\n          var correctPump = inactivePumps.find(pump => pump.id === option.dataset.id);\n          setPump(correctPump);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"blank\",\n          disabled: true,\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), inactivePumps.map(function (element) {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            \"data-id\": element.id,\n            children: element.name\n          }, element.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 22\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"checkboxtext\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tjek f\\xF8lgene\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"checks\",\n      children: [\"1. Hydrant \\xE5ben \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 42\n      }, this), \"2. Maskine er sat i gear \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 76\n      }, this), \"3. Slange korrekt placeret \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 112\n      }, this), \"4. Afl\\xE6s tiden \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 136\n      }, this), \"5. Dyse valg korrekt\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"container\",\n      children: [\"Jeg har tjekket overst\\xE5ende\", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: () => setChecked(!checked),\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"checkmark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      id: \"buttonstartmachine\",\n      children: \"START VANDING\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Startmachine, \"I3J33cBd4iST6tiaOV6S1WBLgnU=\");\n\n_c = Startmachine;\nexport default Startmachine;\n\nvar _c;\n\n$RefreshReg$(_c, \"Startmachine\");","map":{"version":3,"sources":["C:/Users/johan/OneDrive/Documents/GitHub/Markvanding/src/components/StartMachine.jsx"],"names":["React","useEffect","useState","Startmachine","setSubmitted","inactivePumps","inactiveMachines","checked","setChecked","machine","setMachine","pump","setPump","UpdatePump","tempPump","active","fetch","method","headers","body","JSON","stringify","event","preventDefault","localStorage","setItem","name","target","value","map","element","id","options","children","option","selectedIndex","correctPump","find","dataset"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,SAASC,YAAT,CAAsB;AAACC,EAAAA,YAAD;AAAeC,EAAAA,aAAf;AAA8BC,EAAAA;AAA9B,CAAtB,EAAsE;AAAA;;AACpE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC,CAHoE,CAKpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAASW,UAAT,CAAoBF,IAApB,EAAyB;AAEvB;AACC,QAAIG,QAAQ,GAAG,EAAC,GAAGH;AAAJ,KAAf;AAEAG,IAAAA,QAAQ,CAACC,MAAT,GAAkB,CAAlB;AAGDC,IAAAA,KAAK,CAAC,kCAAD,EAAqC;AACxCC,MAAAA,MAAM,EAAE,MADgC;AAExCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF+B;AAKxCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,QAAf;AALkC,KAArC,CAAL;AAOD;;AAED,WAASD,UAAT,CAAoBF,IAApB,EAAyB;AAEvB;AACC,QAAIG,QAAQ,GAAG,EAAC,GAAGH;AAAJ,KAAf;AAEAG,IAAAA,QAAQ,CAACC,MAAT,GAAkB,CAAlB;AAGDC,IAAAA,KAAK,CAAC,kCAAD,EAAqC;AACxCC,MAAAA,MAAM,EAAE,MADgC;AAExCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF+B;AAKxCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,QAAf;AALkC,KAArC,CAAL;AAOD;;AAEDb,EAAAA,SAAS,CAAC,YACV,CACC,CAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,EAAE,EAAC,kBAA5B;AAA+C,IAAA,QAAQ,EAAE,UAASqB,KAAT,EAAe;AACtE;AACAA,MAAAA,KAAK,CAACC,cAAN,GAFsE,CAItE;;AACA,UAAG,CAAChB,OAAJ,EAAa,OALyD,CAOtE;;AACA,UAAGE,OAAO,IAAIE,IAAd,EAAmB;AACjB;AACAE,QAAAA,UAAU,CAACF,IAAD,CAAV,CAFiB,CAKjB;AACA;AACA;AACA;AAEA;;AACAa,QAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgChB,OAAhC;AACAe,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6Bd,IAAI,CAACe,IAAlC;AACAF,QAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,MAAnC;AACArB,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAAA;AACF,KAxBD;AAAA,4BAyBE;AAAK,MAAA,EAAE,EAAC,eAAR;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,IAAI,EAAC,eAAb;AAA6B,QAAA,EAAE,EAAC,eAAhC;AAAgD,QAAA,YAAY,EAAC,OAA7D;AAAqE,QAAA,QAAQ,EAAE,UAASkB,KAAT,EAAe;AAC5FZ,UAAAA,UAAU,CAACY,KAAK,CAACK,MAAN,CAAaC,KAAd,CAAV;AACD,SAFD;AAAA,gCAGE;AAAQ,UAAA,KAAK,EAAC,OAAd;AAAsB,UAAA,QAAQ,MAA9B;AAA+B,UAAA,MAAM;AAArC;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIGtB,gBAAgB,CAACuB,GAAjB,CAAsBC,OAAD,iBAAa;AAAA,oBAA0BA,OAAO,CAACC;AAAlC,WAAaD,OAAO,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA,gBAAlC,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF,eAoCE;AAAA;AAAA;AAAA;AAAA,YApCF,eAsCE;AAAK,MAAA,EAAE,EAAC,YAAR;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,IAAI,EAAC,YAAb;AAA0B,QAAA,EAAE,EAAC,YAA7B;AAA0C,QAAA,YAAY,EAAC,OAAvD;AAA+D,QAAA,QAAQ,EAAE,UAAST,KAAT,EAAe;AACtF,cAAIU,OAAO,GAAGV,KAAK,CAACK,MAAN,CAAaM,QAA3B;AACA,cAAIC,MAAM,GAAGF,OAAO,CAACV,KAAK,CAACK,MAAN,CAAaQ,aAAd,CAApB;AAEA,cAAIC,WAAW,GAAG/B,aAAa,CAACgC,IAAd,CAAoB1B,IAAD,IAAUA,IAAI,CAACoB,EAAL,KAAYG,MAAM,CAACI,OAAP,CAAeP,EAAxD,CAAlB;AAEAnB,UAAAA,OAAO,CAACwB,WAAD,CAAP;AACD,SAPD;AAAA,gCAQE;AAAQ,UAAA,KAAK,EAAC,OAAd;AAAsB,UAAA,QAAQ,MAA9B;AAA+B,UAAA,MAAM;AAArC;AAAA;AAAA;AAAA;AAAA,gBARF,EASG/B,aAAa,CAACwB,GAAd,CAAkB,UAASC,OAAT,EAAkB;AACnC,8BAAO;AAAyB,uBAASA,OAAO,CAACC,EAA1C;AAAA,sBAA+CD,OAAO,CAACJ;AAAvD,aAAaI,OAAO,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFA,CATH;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAtCF,eAwDE;AAAA;AAAA;AAAA;AAAA,YAxDF,eA0DE;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA1DF,eA6DI;AAAG,MAAA,EAAE,EAAC,QAAN;AAAA,qDAA+B;AAAA;AAAA;AAAA;AAAA,cAA/B,4CAAiE;AAAA;AAAA;AAAA;AAAA,cAAjE,8CAAqG;AAAA;AAAA;AAAA;AAAA,cAArG,qCAA6H;AAAA;AAAA;AAAA;AAAA,cAA7H;AAAA;AAAA;AAAA;AAAA;AAAA,YA7DJ,eA8DI;AAAO,MAAA,SAAS,EAAC,WAAjB;AAAA,gEACE;AAAO,QAAA,QAAQ,EAAE,MAAMvB,UAAU,CAAC,CAACD,OAAF,CAAjC;AAA6C,QAAA,IAAI,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YA9DJ,eAmEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,EAAE,EAAC,oBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnEF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyED;;GAjIQJ,Y;;KAAAA,Y;AAmIT,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction Startmachine({setSubmitted, inactivePumps, inactiveMachines}){\r\n  const [checked, setChecked] = useState(false)\r\n  const [machine, setMachine] = useState(\"\")\r\n  const [pump, setPump] = useState(\"\")\r\n\r\n  // function sendStartSMS(pumpnumber, pumpstartcode){\r\n  //   fetch(\"http://localhost:3001/sendsms\", {\r\n  //     method: \"POST\",\r\n  //     headers: {\r\n  //       \"Content-Type\": \"application/json\"\r\n  //     },\r\n  //     body: JSON.stringify({ \r\n  //       number: pumpnumber,\r\n  //       message: pumpstartcode\r\n  //     })\r\n  //   })\r\n  // }  \r\n\r\n  function UpdatePump(pump){\r\n\r\n    // Set date of machine to selected date\r\n     var tempPump = {...pump}\r\n     \r\n     tempPump.active = 1;\r\n     \r\n\r\n    fetch(\"http://localhost:3001/updatepump\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(tempPump)\r\n    })\r\n  }  \r\n\r\n  function UpdatePump(pump){\r\n\r\n    // Set date of machine to selected date\r\n     var tempPump = {...pump}\r\n     \r\n     tempPump.active = 1;\r\n     \r\n\r\n    fetch(\"http://localhost:3001/updatepump\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(tempPump)\r\n    })\r\n  }\r\n\r\n  useEffect(function() \r\n  {\r\n  }, [])\r\n\r\n  return(\r\n      <form className=\"select\" id=\"formstartmachine\" onSubmit={function(event){\r\n        // Prevents default behavior (Getting put at another site)\r\n        event.preventDefault();\r\n\r\n        // Check if Checkbox is true or false\r\n        if(!checked) return;\r\n\r\n        // Checks if a machine and pump is selected\r\n        if(machine && pump){\r\n          // MAKE MACHINE OBJECT\r\n          UpdatePump(pump)\r\n          \r\n          \r\n          // UDFYLD RIGTIG DATA TIL SMS\r\n          // var pumpnumber = \"45\" + pump.number\r\n          // var pumpstartcode = pump.startcode\r\n          // sendStartSMS(pumpnumber, pumpstartcode)\r\n          \r\n          // Sets \"Submitted\" hook to true\r\n          localStorage.setItem(\"machine\", machine)\r\n          localStorage.setItem(\"pump\", pump.name)\r\n          localStorage.setItem(\"hasstarted\", \"true\")\r\n          setSubmitted(true)\r\n        };\r\n      }}>\r\n        <div id=\"choosemachine\">\r\n          <label htmlFor=\"chosenmachine\">Vælg en maskine</label>\r\n          <br></br>\r\n          <select name=\"chosenmachine\" id=\"chosenmachine\" defaultValue=\"blank\" onChange={function(event){\r\n            setMachine(event.target.value);\r\n          }}>\r\n            <option value=\"blank\" disabled hidden></option>\r\n            {inactiveMachines.map((element) => <option key={element.id}>{element.id}</option>)}\r\n          </select>\r\n        </div>\r\n  \r\n        <br></br>\r\n  \r\n        <div id=\"choosepump\">\r\n          <label htmlFor=\"\">Vælg en pumpe</label>\r\n          <br></br>\r\n          <select name=\"chosenpump\" id=\"chosenpump\" defaultValue=\"blank\" onChange={function(event){\r\n            var options = event.target.children;\r\n            var option = options[event.target.selectedIndex];\r\n\r\n            var correctPump = inactivePumps.find((pump) => pump.id === option.dataset.id)\r\n\r\n            setPump(correctPump);\r\n          }}>\r\n            <option value=\"blank\" disabled hidden></option>\r\n            {inactivePumps.map(function(element) {\r\n              return <option key={element.id} data-id={element.id}>{element.name}</option>\r\n            })}\r\n          </select>\r\n        </div>\r\n  \r\n        <br></br>\r\n    \r\n        <div id=\"checkboxtext\">\r\n          <h2>Tjek følgene</h2>\r\n          </div>\r\n          <p id=\"checks\">1. Hydrant åben <br></br>2. Maskine er sat i gear <br></br>3. Slange korrekt placeret <br></br>4. Aflæs tiden <br></br>5. Dyse valg korrekt</p>\r\n          <label className=\"container\">Jeg har tjekket overstående\r\n            <input onChange={() => setChecked(!checked)} type=\"checkbox\"></input>\r\n            <span className=\"checkmark\"></span>\r\n          </label>\r\n    \r\n        <button type=\"submit\" id=\"buttonstartmachine\">START VANDING</button>\r\n\r\n      </form>\r\n  );\r\n\r\n}\r\n\r\nexport default Startmachine;"]},"metadata":{},"sourceType":"module"}