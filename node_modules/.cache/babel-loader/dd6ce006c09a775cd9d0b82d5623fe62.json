{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\johan\\\\OneDrive\\\\Documents\\\\GitHub\\\\Markvanding\\\\src\\\\components\\\\Overview.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Overviewstillgoing from './OverviewStillGoing';\nimport Overviewexpired from './OverviewExpired';\nimport { withRouter } from \"react-router\";\n\nconst Overview = ({\n  expiredMachines,\n  stillgoingMachines\n}) => {\n  _s();\n\n  const [activePumps, setActivePumps] = useState([]);\n\n  const sendStopSMS = (pumpnumber, pumpStopcode) => {\n    fetch(\"http://localhost:3001/sendsms\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        number: pumpnumber,\n        message: pumpStopcode\n      })\n    });\n  };\n\n  const StopMachine = (machine, pump) => {\n    fetch(\"http://localhost:3001/stopmachine\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        machineid: machine.id,\n        pumpid: pump.id\n      })\n    });\n  };\n\n  useEffect(function () {\n    fetch(\"http://localhost:3001/activepumps\").then(data => data.json()).then(function (json) {\n      setActivePumps(json);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [expiredMachines.length > 0 ? /*#__PURE__*/_jsxDEV(Overviewexpired, {\n      expiredMachines: expiredMachines,\n      activePumps: activePumps,\n      StopMachine: StopMachine\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Overviewstillgoing, {\n      stillgoingMachines: stillgoingMachines,\n      activePumps: activePumps,\n      StopMachine: StopMachine,\n      sendStopSMS: sendStopSMS\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Overview, \"tEvmLTS3ZXHYDhr6HtY5hdaAMws=\");\n\n_c = Overview;\nexport default _c2 = withRouter(Overview);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Overview\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/johan/OneDrive/Documents/GitHub/Markvanding/src/components/Overview.jsx"],"names":["React","useEffect","useState","Overviewstillgoing","Overviewexpired","withRouter","Overview","expiredMachines","stillgoingMachines","activePumps","setActivePumps","sendStopSMS","pumpnumber","pumpStopcode","fetch","method","headers","body","JSON","stringify","number","message","StopMachine","machine","pump","machineid","id","pumpid","then","data","json","catch","error","console","log","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,CAAD,KAA6C;AAAA;;AAC5D,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMS,WAAW,GAAG,CAACC,UAAD,EAAaC,YAAb,KAA8B;AAChDC,IAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCC,MAAAA,MAAM,EAAE,MAD6B;AAErCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF4B;AAKrCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,MAAM,EAAER,UADW;AAEnBS,QAAAA,OAAO,EAAER;AAFU,OAAf;AAL+B,KAAlC,CAAL;AAUD,GAXD;;AAaA,QAAMS,WAAW,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAmB;AACrCV,IAAAA,KAAK,CAAC,mCAAD,EAAsC;AACzCC,MAAAA,MAAM,EAAE,MADiC;AAEzCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFgC;AAKzCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBM,QAAAA,SAAS,EAAEF,OAAO,CAACG,EADA;AAEnBC,QAAAA,MAAM,EAAEH,IAAI,CAACE;AAFM,OAAf;AALmC,KAAtC,CAAL;AAUD,GAXD;;AAaAzB,EAAAA,SAAS,CAAC,YACV;AACEa,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACCc,IADD,CACOC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADhB,EAECF,IAFD,CAEM,UAASE,IAAT,EAAe;AACnBpB,MAAAA,cAAc,CAACoB,IAAD,CAAd;AACD,KAJD,EAIGC,KAJH,CAIUC,KAAD,IAAW;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAND;AAOD,GATQ,EASN,EATM,CAAT;AAWA,sBACE;AAAA,eACGzB,eAAe,CAAC4B,MAAhB,GAAyB,CAAzB,gBACD,QAAC,eAAD;AAAiB,MAAA,eAAe,EAAI5B,eAApC;AAAqD,MAAA,WAAW,EAAIE,WAApE;AAAiF,MAAA,WAAW,EAAIa;AAAhG;AAAA;AAAA;AAAA;AAAA,YADC,gBACiH,qCAFpH,eAGE,QAAC,kBAAD;AAAoB,MAAA,kBAAkB,EAAId,kBAA1C;AAA8D,MAAA,WAAW,EAAIC,WAA7E;AAA0F,MAAA,WAAW,EAAIa,WAAzG;AAAuH,MAAA,WAAW,EAAEX;AAApI;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA/CD;;GAAML,Q;;KAAAA,Q;AAiDN,qBAAeD,UAAU,CAACC,QAAD,CAAzB","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Overviewstillgoing from './OverviewStillGoing';\r\nimport Overviewexpired from './OverviewExpired';\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst Overview = ({ expiredMachines, stillgoingMachines }) => {\r\n  const [activePumps, setActivePumps] = useState([])\r\n\r\n  const sendStopSMS = (pumpnumber, pumpStopcode) => {\r\n    fetch(\"http://localhost:3001/sendsms\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ \r\n        number: pumpnumber,\r\n        message: pumpStopcode\r\n      })\r\n    })\r\n  }\r\n\r\n  const StopMachine = (machine, pump) => {\r\n    fetch(\"http://localhost:3001/stopmachine\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        machineid: machine.id,\r\n        pumpid: pump.id\r\n      })\r\n    })\r\n  }\r\n\r\n  useEffect(function() \r\n  { \r\n    fetch(\"http://localhost:3001/activepumps\")\r\n    .then((data) => data.json())\r\n    .then(function(json) {\r\n      setActivePumps(json)     \r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      {expiredMachines.length > 0 ? \r\n      <Overviewexpired expiredMachines = {expiredMachines} activePumps = {activePumps} StopMachine = {StopMachine} /> : <></>}\r\n      <Overviewstillgoing stillgoingMachines = {stillgoingMachines} activePumps = {activePumps} StopMachine = {StopMachine}  sendStopSMS={sendStopSMS}/>\r\n    </div>   \r\n  )\r\n}\r\n\r\nexport default withRouter(Overview);\r\n"]},"metadata":{},"sourceType":"module"}